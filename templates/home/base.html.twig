<!DOCTYPE html>
<html lang="es">
	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<!-- Forzar recarga completa del head cuando se visita esta página con Turbo -->
		<meta name="turbo-visit-control" content="reload">
		<title>
			{% block title %}Panel de Control
			{% endblock %}
		</title>





		{% block stylesheets %}
			<!-- Bootstrap CSS -->
			<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" data-turbo-track="reload">
			<style data-turbo-track="reload">
				* {
					margin: 0;
					padding: 0;
					box-sizing: border-box;
				}

				html,
				body {
					margin: 0;
					padding: 0;
					font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
					overflow-x: hidden;
					height: 100%;
				}

				.header-title {
					background: #0d6efd;
					color: white;
					padding: 1.2rem;
					text-align: center;
					font-size: 1.5rem;
					font-weight: bold;
					width: 100%;
				}

				.horizontal-menu {
					background: #f8f9fa;
					border-bottom: 2px solid #dee2e6;
					width: 100%;
					padding: 0;
				}

				.horizontal-menu .nav {
					padding: 0.5rem 1rem;
				}

			.layout-wrapper {
				display: flex;
				width: 100%;
				min-height: calc(100vh - 120px);
				padding-bottom: 60px;
			}				.sidebar {
					width: 250px;
					min-width: 250px;
					background: #f8f9fa;
					border-right: 2px solid #dee2e6;
					padding: 1rem;
					overflow-y: auto;
				}

				.sidebar .user-info {
					background: #e9ecef;
					padding: 1rem;
					margin-bottom: 1rem;
					border-radius: 0.375rem;
				}

				.sidebar .user-info p {
					margin: 0;
					font-size: 0.875rem;
				}

				.sidebar .nav-link {
					color: #212529;
					padding: 0.75rem 1rem;
					border-radius: 0.375rem;
					margin-bottom: 0.25rem;
					transition: all 0.2s;
				}

				.sidebar .nav-link:hover {
					background: #0d6efd;
					color: white;
				}

				.sidebar .nav-link.active {
					background: #0d6efd;
					color: white;
				}

				.main-content {
					flex: 1;
					padding: 2rem;
					background: #ffffff;
					width: 100%;
					overflow-x: hidden;
				}

				.main-content h1 {
					margin-bottom: 1.5rem;
				}

				@media(max-width: 992px) {
					.layout-wrapper {
						flex-direction: column;
					}

					.sidebar {
						width: 100%;
						min-width: 100%;
						border-right: none;
						border-bottom: 2px solid #dee2e6;
					}

					.main-content {
						padding: 1rem;
					}
				}

				@media(max-width: 576px) {
					.header-title {
						font-size: 1.25rem;
						padding: 1rem;
					}

					.horizontal-menu .nav {
						flex-direction: column;
					}

				.main-content {
					padding: 0.75rem;
				}
			}

			.footer {
				background: #f8f9fa;
				border-top: 2px solid #dee2e6;
				padding: 1rem;
				text-align: center;
				color: #6c757d;
				font-size: 0.875rem;
				position: fixed;
				bottom: 0;
				left: 0;
				right: 0;
				width: 100%;
				z-index: 1000;
			}
		</style>
	{% endblock %}		{% block javascripts %}

    {% block importmap %}{{ importmap('app') }}{% endblock %}
			<!-- Bootstrap JS -->
			<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
			<!-- SweetAlert2 -->
			<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		{% endblock %}
	</head>
	<body>
		<!-- Título principal -->
		<div class="header-title">
			PANEL DE CONTROL
		</div>

		<!-- Menú horizontal secundario -->
		<nav class="horizontal-menu">

			<ul class="nav nav-pills nav-fill">
				<li class="nav-item">
					<a class="nav-link active" aria-current="page" href="#">Active</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" href="#">Link</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" href="#">Link</a>
				</li>
				<li class="nav-item">
					<a class="nav-link disabled" aria-disabled="true">Disabled</a>
				</li>
			</ul>
		</nav>


		<!-- Contenedor principal con sidebar y contenido -->
		<div
			class="layout-wrapper">
			<!-- Menú lateral -->
			<aside
				class="sidebar">
				{# Ruta actual para marcar enlaces activos #}
				{% set current_route = app.request.attributes.get('_route') %}
				<!-- Información del usuario -->
				{% if app.user %}
					<div class="user-info">
						<p class="mb-1 text-muted">Bienvenido/a</p>
                        {% if app.user.name %}
                            <p class="fw-bold mb-2">{{ app.user.name }}</p>
                        {% else %}
                            <p class="fw-bold mb-2">{{ app.user.userIdentifier }}</p>
                        {% endif %}
						<a href="{{ path('app_logout') }}" class="btn btn-primary btn-sm w-100">Cerrar sesión</a>
					</div>
				{% endif %}

				<!-- Menú de navegación -->
				<ul class="nav flex-column">
					<li class="nav-item text-uppercase text-muted small" style="pointer-events: none;">Usuarios</li>
					<li class="nav-item">
						<a class="nav-link {{ current_route == 'app_home' ? 'active' : '' }}" href="{{ path('app_home') }}">Inicio</a>
					</li>



                    <li class="nav-item">
						{# Perfil (show, edit) #}
						<a class="nav-link {{ current_route starts with 'app_profile_' ? 'active' : '' }}" href="{{ path('app_profile_show') }}">Mi perfil</a>
					</li>




					{% if is_granted('ROLE_ADMIN') %}
					<li class="nav-item text-uppercase text-muted small" style="pointer-events: none;">Administrativa</li>

					<li class="nav-item">
						{# Cualquier ruta que empiece por app_user_ (index, new, show, edit) #}
						<a class="nav-link {{ current_route starts with 'app_user_' ? 'active' : '' }}" href="{{ path('app_user_index') }}">Usuarios</a>
					</li>

					<li class="nav-item">
						{# Cualquier ruta que empiece por app_categoria_ #}
						<a class="nav-link {{ current_route starts with 'app_categoria_' ? 'active' : '' }}" href="{{ path('app_categoria_index') }}">Categorías</a>
					</li>

					<li class="nav-item">
						<a class="nav-link {{ current_route == 'app_prueba' ? 'active' : '' }}" href="{{ path('app_prueba') }}">Prueba</a>
					</li>

					<li class="nav-item">
						<a class="nav-link {{ current_route == 'app_product_index' ? 'active' : '' }}" href="{{ path('app_product_index') }}">Productos</a>
					</li>
					{% endif %}
				</ul>
			</aside>

		<!-- Contenido principal -->
		<main class="main-content">
			{#
				SISTEMA DE MENSAJES FLASH
				Los mensajes flash son notificaciones temporales que se muestran después de una acción.
				Se añaden desde los controladores con: $this->addFlash('tipo', 'mensaje');

				Tipos disponibles:
				- 'success': Alertas verdes (operaciones exitosas como crear, editar, eliminar)
				- 'error': Alertas rojas (errores o acceso denegado)
				- 'warning': Alertas amarillas (advertencias)
				- 'info': Alertas azules (información general)

				Los mensajes se eliminan automáticamente después de mostrarse una vez.
			#}
			<!-- Mensajes Flash -->
			{% for label, messages in app.flashes %}
				{% for message in messages %}
					{# Mensaje de ÉXITO - Fondo verde (Bootstrap: alert-success) #}
					{% if label == 'success' %}
						<div class="alert alert-success alert-dismissible fade show" role="alert">
							<strong>✓ Éxito:</strong> {{ message }}
							<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
						</div>
					{# Mensaje de ERROR - Fondo rojo (Bootstrap: alert-danger) #}
					{% elseif label == 'error' %}
						<div class="alert alert-danger alert-dismissible fade show" role="alert">
							<strong>✗ Error:</strong> {{ message }}
							<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
						</div>
					{# Mensaje de ADVERTENCIA - Fondo amarillo (Bootstrap: alert-warning) #}
					{% elseif label == 'warning' %}
						<div class="alert alert-warning alert-dismissible fade show" role="alert">
							<strong>⚠ Advertencia:</strong> {{ message }}
							<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
						</div>
					{# Mensaje de INFORMACIÓN - Fondo azul (Bootstrap: alert-info) #}
					{% elseif label == 'info' %}
						<div class="alert alert-info alert-dismissible fade show" role="alert">
							<strong>ℹ Info:</strong> {{ message }}
							<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
						</div>
					{% endif %}
				{% endfor %}
			{% endfor %}

			{% block content %}
				{% if template_path is defined %}
					{{ include(template_path) }}
				{% endif %}
			{% endblock %}
		</main>
		</div>

		<!-- Footer -->
		<footer class="footer">
			<p class="mb-0">Creado por Jhonatan Fernandez © {{ "now"|date("Y") }}</p>
		</footer>

		<!-- Script global: confirmación SweetAlert2 para formularios de eliminar -->
		<script>
		// Listener global que escucha TODOS los eventos 'submit' del documento
		document.addEventListener('submit', function (e) {
			// Capturamos el elemento que disparó el evento (el formulario)
			const form = e.target;

			// Verificamos que sea un formulario HTML válido
			if (!(form instanceof HTMLFormElement)) return;

			// FILTRO CLAVE: Solo procesamos formularios con la clase 'js-delete-form'
			// Si el formulario NO tiene esta clase, el script se ignora y el formulario funciona normal
			if (!form.classList.contains('js-delete-form')) return;

			// Protección contra doble envío:
			// Cuando ejecutamos form.submit() programáticamente, se vuelve a disparar este listener
			// Este flag evita que se muestre el diálogo dos veces
			if (form.dataset.confirmed === 'true') return;

			// Detenemos el envío automático del formulario para mostrar primero la confirmación
			e.preventDefault();

			// Leemos los textos personalizados desde los atributos data-* del formulario
			// Si no existen, usamos valores por defecto en español
			// Ejemplo: data-swal-title="¿Eliminar categoría?" se lee como form.dataset.swalTitle
			const title = form.dataset.swalTitle || '¿Eliminar este registro?';
			const text = form.dataset.swalText || 'Esta acción no se puede deshacer.';
			const confirmText = form.dataset.swalConfirm || 'Sí, eliminar';
			const cancelText = form.dataset.swalCancel || 'Cancelar';

			// Mostramos el diálogo de confirmación SweetAlert2
			Swal.fire({
				title: title,                    // Título principal del modal
				text: text,                      // Texto descriptivo debajo del título
				icon: 'warning',                 // Icono de advertencia (⚠️)
				showCancelButton: true,          // CRÍTICO: Muestra el botón "Cancelar" (hace que sea un diálogo de decisión)
				confirmButtonText: confirmText,  // Texto del botón de confirmación
				cancelButtonText: cancelText,    // Texto del botón de cancelación
				confirmButtonColor: '#d33',      // Color rojo para el botón de eliminar (peligro)
				cancelButtonColor: '#6c757d',    // Color gris para el botón cancelar (neutral)
				reverseButtons: true             // Invierte el orden: Cancelar a la izquierda, Confirmar a la derecha
			}).then((result) => {
				// Esta función se ejecuta DESPUÉS de que el usuario hace clic en algún botón

				// Si el usuario hizo clic en "Sí, eliminar" (confirmó)
				if (result.isConfirmed) {
					// Marcamos el formulario como confirmado para evitar el bucle infinito
					form.dataset.confirmed = 'true';

					// Ahora SÍ enviamos el formulario al servidor para eliminar el registro
					form.submit();
				}
				// Si el usuario hizo clic en "Cancelar" o cerró el modal:
				// No entramos al if, no pasa nada, el modal se cierra y el registro NO se elimina
			});
		});
		</script>
	</body>
</html>
